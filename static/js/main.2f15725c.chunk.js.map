{"version":3,"sources":["services/common.ts","services/hooks.ts","services/location.ts","components/options/option.tsx","components/options/options.tsx","components/title/title.tsx","components/page-title/page-title.tsx","components/root/root.tsx","index.tsx"],"names":["ServicesContext","createContext","Error","useServices","useContext","services","useTitle","locationExtractor","getTitle","Option","name","label","value","onChange","FormControlLabel","control","Switch","checked","e","target","Options","options","getOptions","useState","optionsToState","state","setState","updateOption","useCallback","names","Object","keys","targetIndex","indexOf","otherNames","length","slice","otherName","Math","floor","random","FormGroup","map","key","reduce","option","Title","title","PageTitle","Helmet","useStyles","makeStyles","root","marginTop","Root","classes","Provider","Container","className","maxWidth","Card","CardContent","Typography","variant","rootElement","document","getElementById","render","constructor","window","this","getStringParam","getArrayParam","getSubmitLabel","location","getParam","search","parse","parsed","Array","undefined"],"mappings":"+PAOO,MAAMA,EAAkBC,wBAAsC,CACnE,eACE,MAAMC,MAAM,gCCNHC,EAAc,IAAgBC,qBAAWJ,GAAiBK,S,oCCwDhE,MAAMC,EAAW,IAAMH,IAAcI,kBAAkBC,W,oBCtDvD,MAAMC,EAKR,EAAGC,OAAMC,QAAQD,EAAME,QAAOC,cACjC,kBAACC,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACEC,QAASL,EACTC,SAAQ,8GAAEK,GAAKL,EAASK,EAAEC,OAAOF,UACjCP,KAAMA,IAGVC,MAAOA,ICZES,EAAoB,KAC/B,MAAMC,EFoDwBlB,IAAcI,kBAAkBe,aErDzB,EAEXC,mBAAS,IAAMC,EAAeH,IAFnB,mBAE9BI,EAF8B,KAEvBC,EAFuB,KAI/BC,EAAeC,sBACnB,CAAClB,EAAcE,KACb,MAAMiB,EAAQC,OAAOC,KAAKN,GACpBO,EAAcH,EAAMI,QAAQvB,GAC5BwB,EACJL,EAAMM,OAAS,EACX,IAAIN,EAAMO,MAAM,EAAGJ,MAAiBH,EAAMO,MAAMJ,EAAc,IAC9D,GAEAK,EACJH,EAAWI,KAAKC,MAAMD,KAAKE,SAAWN,EAAWC,SAE/CzB,KAAQe,GACVC,EAAS,2BACJD,GADG,IAEN,CAACf,GAAOE,EACR,CAACyB,IAAYzB,GAAgBa,EAAMY,OAIzC,CAACZ,IAGH,OACE,kBAACgB,EAAA,EAAD,KACGX,OAAOC,KAAKN,GAAOiB,IAAIhC,GACtB,kBAACD,EAAD,CACEkC,IAAKjC,EACLA,KAAMA,EACNE,QAASa,EAAMf,GACfG,SAAUD,GAASe,EAAajB,EAAME,QAO1CY,EAAkBH,GACtBA,EAAQuB,OAAyC,CAACnB,EAAOoB,KACvDpB,EAAMoB,IAAU,EACTpB,GACN,ICjDQqB,EAAkB,KAC7B,MAAMC,EAAQzC,KHKa,iBGH3B,OAAO,oCAAGyC,I,YCFL,MAAMC,EAAsB,KACjC,MAAMD,EAAQzC,KJIa,iBIF3B,OACE,kBAAC2C,EAAA,EAAD,KACE,+BAAQF,K,MCMd,MAAMG,EAAYC,YAAW,CAC3BC,KAAM,CACJC,UAAW,SAIFC,EAAyC,EAAGjD,eACvD,MAAMkD,EAAUL,IAEhB,OACE,kBAAClD,EAAgBwD,SAAjB,CAA0B5C,MAAO,CAAEP,aACjC,kBAAC2C,EAAD,MACA,kBAACS,EAAA,EAAD,CAAWC,UAAWH,EAAQH,KAAMO,SAAS,MAC3C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAClB,kBAACjB,EAAD,OAEF,kBAAC1B,EAAD,WC3BN4C,EAAcC,SAASC,eAAe,QAC5CC,iBACE,gBAACb,EAAD,CACEjD,SAAU,CACRE,kBAAmB,INKlB,MAEL6D,YAAsBC,GAAiB,KAAjBA,SAEtB7D,WACE,OAAO8D,KAAKC,eATgB,SAY9BjD,aACE,OAAOgD,KAAKE,cAZkB,WAehCC,iBACE,OAAOH,KAAKC,eAfuB,eAkBrC,eACE,OAAOD,KAAKD,OAAOK,SAGXC,SAASjE,GAAe,MACxBkE,EAAWN,KAAKI,SAAhBE,OACR,OAAOC,gBAAMD,GAAQlE,GAGb6D,eAAe7D,GACvB,MAAMoE,EAASR,KAAKK,SAASjE,GAC7B,MAAyB,kBAAXoE,EACVA,EACAA,aAAkBC,MAClBD,EAAO,QACPE,EAGIR,cAAc9D,GACtB,MAAMoE,EAASR,KAAKK,SAASjE,GAC7B,OAAOoE,aAAkBC,MACrBD,EACkB,kBAAXA,EACP,CAACA,GACD,KM7CoDT,WAG1DL,K","file":"static/js/main.2f15725c.chunk.js","sourcesContent":["import { createContext } from \"react\";\nimport { LocationExtractorService } from \"./location\";\n\nexport interface Services {\n  locationExtractor: LocationExtractorService;\n}\n\nexport const ServicesContext = createContext<{ services: Services }>({\n  get services(): Services {\n    throw Error(\"services are not provided\");\n  }\n});\n","import { Services, ServicesContext } from \"./common\";\nimport { useContext } from \"react\";\n\nexport const useServices = (): Services => useContext(ServicesContext).services;\n","import { parse } from \"query-string\";\nimport { useServices } from \"./hooks\";\n\nexport interface LocationExtractorService {\n  getTitle(): string | undefined;\n  getOptions(): string[];\n  getSubmitLabel(): string | undefined;\n}\n\nexport const DEFAULT_TITLE = \"Quality Picker\";\n\nexport const TITLE_PARAM_NAME = \"title\";\nexport const OPTIONS_PARAM_NAME = \"options\";\nexport const SUBMIT_LABEL_PARAM_NAME = \"submitLabel\";\n\nexport class WindowLocationExtractorService\n  implements LocationExtractorService {\n  constructor(protected window: Window) {}\n\n  getTitle() {\n    return this.getStringParam(TITLE_PARAM_NAME);\n  }\n\n  getOptions() {\n    return this.getArrayParam(OPTIONS_PARAM_NAME);\n  }\n\n  getSubmitLabel() {\n    return this.getStringParam(SUBMIT_LABEL_PARAM_NAME);\n  }\n\n  protected get location() {\n    return this.window.location;\n  }\n\n  protected getParam(name: string) {\n    const { search } = this.location;\n    return parse(search)[name];\n  }\n\n  protected getStringParam(name: string): string | undefined {\n    const parsed = this.getParam(name);\n    return typeof parsed === \"string\"\n      ? parsed\n      : parsed instanceof Array\n      ? parsed[0]\n      : undefined;\n  }\n\n  protected getArrayParam(name: string): string[] {\n    const parsed = this.getParam(name);\n    return parsed instanceof Array\n      ? parsed\n      : typeof parsed === \"string\"\n      ? [parsed]\n      : [];\n  }\n}\n\nexport const useTitle = () => useServices().locationExtractor.getTitle();\nexport const useOptions = () => useServices().locationExtractor.getOptions();\nexport const useSubmitLabel = () =>\n  useServices().locationExtractor.getSubmitLabel();\n","import React from \"react\";\n\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nexport const Option: React.FC<{\n  name: string;\n  label?: string;\n  value: boolean;\n  onChange(value: boolean): void;\n}> = ({ name, label = name, value, onChange }) => (\n  <FormControlLabel\n    control={\n      <Switch\n        checked={value}\n        onChange={e => onChange(e.target.checked)}\n        name={name}\n      />\n    }\n    label={label}\n  />\n);\n","import React, { useState, useCallback } from \"react\";\n\nimport FormGroup from \"@material-ui/core/FormGroup\";\n\nimport { useOptions } from \"../../services/location\";\nimport { Option } from \"./option\";\n\nexport const Options: React.FC = () => {\n  const options = useOptions();\n  const [state, setState] = useState(() => optionsToState(options));\n\n  const updateOption = useCallback(\n    (name: string, value: boolean) => {\n      const names = Object.keys(state);\n      const targetIndex = names.indexOf(name);\n      const otherNames =\n        names.length > 1\n          ? [...names.slice(0, targetIndex), ...names.slice(targetIndex + 1)]\n          : [];\n\n      const otherName =\n        otherNames[Math.floor(Math.random() * otherNames.length)];\n\n      if (name in state) {\n        setState({\n          ...state,\n          [name]: value,\n          [otherName]: value ? false : state[otherName]\n        });\n      }\n    },\n    [state]\n  );\n\n  return (\n    <FormGroup>\n      {Object.keys(state).map(name => (\n        <Option\n          key={name}\n          name={name}\n          value={!!state[name]}\n          onChange={value => updateOption(name, value)}\n        />\n      ))}\n    </FormGroup>\n  );\n};\n\nconst optionsToState = (options: string[]) =>\n  options.reduce<Partial<Record<string, boolean>>>((state, option) => {\n    state[option] = false;\n    return state;\n  }, {});\n","import React from \"react\";\nimport { useTitle, DEFAULT_TITLE } from \"../../services/location\";\n\nexport const Title: React.FC = () => {\n  const title = useTitle() || DEFAULT_TITLE;\n\n  return <>{title}</>;\n};\n","import React from \"react\";\nimport { useTitle, DEFAULT_TITLE } from \"../../services/location\";\nimport { Helmet } from \"react-helmet\";\n\nexport const PageTitle: React.FC = () => {\n  const title = useTitle() || DEFAULT_TITLE;\n\n  return (\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n  );\n};\n","import React from \"react\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Services, ServicesContext } from \"../../services\";\nimport { Options } from \"../options\";\nimport { Title } from \"../title\";\nimport { PageTitle } from \"../page-title\";\n\nimport \"./styles.css\";\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: \"12%\"\n  }\n});\n\nexport const Root: React.FC<{ services: Services }> = ({ services }) => {\n  const classes = useStyles();\n\n  return (\n    <ServicesContext.Provider value={{ services }}>\n      <PageTitle />\n      <Container className={classes.root} maxWidth=\"sm\">\n        <Card>\n          <CardContent>\n            <Typography variant=\"h2\">\n              <Title />\n            </Typography>\n            <Options />\n          </CardContent>\n        </Card>\n      </Container>\n    </ServicesContext.Provider>\n  );\n};\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport { Root } from \"./components/root\";\nimport { WindowLocationExtractorService } from \"./services/location\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(\n  <Root\n    services={{\n      locationExtractor: new WindowLocationExtractorService(window)\n    }}\n  />,\n  rootElement\n);\n"],"sourceRoot":""}